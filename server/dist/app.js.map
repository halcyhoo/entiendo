{"version":3,"sources":["../src/app.js"],"names":["MongoStore","require","app","connect","mongodb","db","connection","on","storeContainer","mongooseConnection","use","secret","cookieSecret","resave","saveUninitialized","store","indexRoutes","usersRoutes","questionsRoutes","json","urlencoded","extended","req","res","next","header","err","Error","status","locals","message","error","get","request","body","headers","listen","process","env","PORT","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,aAAaC,QAAQ,eAAR,2BAAjB;AACA,IAAIC,MAAM,wBAAV;;AAEA,mBAASC,OAAT,CAAiB,mBAASC,OAA1B;;AAEA,IAAMC,KAAK,mBAASC,UAApB;AACAD,GAAGE,EAAH,CAAM,OAAN,EAAe,YAAI;AACjB;AACD,CAFD;;AAIA,IAAMC,iBAAiB,IAAIR,UAAJ,CAAe,EAACS,oBAAoBJ,EAArB,EAAf,CAAvB;;AAEAH,IAAIQ,GAAJ,CAAQ,8BAAQ;AACdC,UAAQ,mBAASC,YADH;AAEdC,UAAQ,IAFM;AAGdC,qBAAmB,KAHL;AAIdC,SAAOP;AAJO,CAAR,CAAR;;AAQA,IAAIQ,cAAcf,QAAQ,gBAAR,CAAlB;AACA,IAAIgB,cAAchB,QAAQ,gBAAR,CAAlB;AACA,IAAIiB,kBAAkBjB,QAAQ,oBAAR,CAAtB;;AAEAC,IAAIQ,GAAJ,CAAQ,qBAAWS,IAAX,EAAR;AACAjB,IAAIQ,GAAJ,CAAQ,qBAAWU,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAnB,IAAIQ,GAAJ,CAAQ,6BAAR;;AAEAR,IAAIQ,GAAJ,CAAQ,UAASY,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BD,MAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,gDAA3C;AACAD;AACD,CAJD;;AAOAtB,IAAIQ,GAAJ,CAAQ,GAAR,EAAaM,WAAb;AACAd,IAAIQ,GAAJ,CAAQ,QAAR,EAAkBO,WAAlB;AACAf,IAAIQ,GAAJ,CAAQ,YAAR,EAAsBQ,eAAtB;;AAEA;AACAhB,IAAIQ,GAAJ,CAAQ,UAASY,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/B,MAAIE,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAV;AACAD,MAAIE,MAAJ,GAAa,GAAb;AACAJ,OAAKE,GAAL;AACD,CAJD;;AAMA;AACAxB,IAAIQ,GAAJ,CAAQ,UAASgB,GAAT,EAAcJ,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,MAAIM,MAAJ,CAAWC,OAAX,GAAqBJ,IAAII,OAAzB;AACAP,MAAIM,MAAJ,CAAWE,KAAX,GAAmBT,IAAIpB,GAAJ,CAAQ8B,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCN,GAAvC,GAA6C,EAAhE;;AAEA;AACAH,MAAIK,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB;;AAGAL,MAAIJ,IAAJ,CAAS,EAACc,SAAS,EAACC,MAAMZ,IAAIY,IAAX,EAAiBC,SAASb,IAAIa,OAA9B,EAAV,EAAkDL,SAASJ,IAAII,OAA/D,EAAT;AACD,CAVD;;AAYA5B,IAAIkC,MAAJ,CAAWC,QAAQC,GAAR,CAAYC,IAAvB,EAA6B,YAAY;AACvC;AACD,CAFD;;AAIAC,OAAOC,OAAP,GAAiBvC,GAAjB","file":"app.js","sourcesContent":["import express from \"express\";\nimport cookieParser from \"cookie-parser\";\nimport bodyParser from \"body-parser\";\nimport mongoose from \"mongoose\";\nimport session from \"express-session\";\nimport Settings from \"./settings\";\n\nvar MongoStore = require(\"connect-mongo\")(session);\nvar app = express();\n\nmongoose.connect(Settings.mongodb);\n\nconst db = mongoose.connection;\ndb.on(\"error\", ()=>{\n  //console.error(\"DB Connection Error\");\n});\n\nconst storeContainer = new MongoStore({mongooseConnection: db});\n\napp.use(session({\n  secret: Settings.cookieSecret,\n  resave: true,\n  saveUninitialized: false,\n  store: storeContainer\n}));\n\n\nvar indexRoutes = require(\"./routes/index\");\nvar usersRoutes = require(\"./routes/users\");\nvar questionsRoutes = require(\"./routes/questions\");\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\n\napp.use(function(req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n  next();\n});\n\n\napp.use(\"/\", indexRoutes);\napp.use(\"/users\", usersRoutes);\napp.use(\"/questions\", questionsRoutes);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  var err = new Error(\"Not Found\");\n  err.status = 404;\n  next(err);\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n\n\n  res.json({request: {body: req.body, headers: req.headers}, message: err.message});\n});\n\napp.listen(process.env.PORT, function () {\n  //console.log('Express app listening on port ',process.env.PORT);\n});\n\nmodule.exports = app;\n"]}