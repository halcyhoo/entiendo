{"version":3,"sources":["../../src/models/user.js"],"names":["mongoose","require","bcrypt","Answer","Level","UserSchema","Schema","email","type","String","unique","required","trim","firstName","lastName","level","Number","default","admin","Boolean","password","methods","getScore","user","callback","find","userId","_id","error","answers","totalAnswers","length","successAnswers","levelPoints","totalPoints","a","success","points","nextLevel","position","statics","authenticate","User","exec","err","Error","status","compare","result","pre","next","hash","model","module","exports"],"mappings":"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","file":"user.js","sourcesContent":["var mongoose = require(\"mongoose\");\nvar bcrypt = require(\"bcrypt\");\nvar Answer = require(\"./answer\");\nvar Level = require(\"./level\");\n\nvar UserSchema = new mongoose.Schema({\n  email: {\n    type: String,\n    unique: true,\n    required: true,\n    trim: true\n  },\n  firstName: {\n    type: String,\n    trim: true\n  },\n  lastName: {\n    type: String,\n    trim: true\n  },\n  level: {\n    type: Number,\n    default: 1\n  },\n  admin: {\n    type: Boolean,\n  },\n  password: {\n    type: String,\n    required: true,\n  }\n});\n\nUserSchema.methods.getScore = (user, callback) => {\n  Answer.find({userId: user._id}, (error, answers) => {\n    if(error){\n      callback(error);\n    }else{\n      let totalAnswers = answers.length,\n          successAnswers = 0,\n          levelPoints = 0,\n          totalPoints = 0;\n      for(let a = 0; a < answers.length; a++){\n        if(answers[a].success){\n          successAnswers++;\n          totalPoints += answers[a].points;\n          if(answers[a].level == user.level){\n            levelPoints += answers[a].points;\n          }\n        }\n      }\n      callback({totalAnswers, successAnswers, levelPoints, totalPoints});\n\n    }\n  });\n}\n\nUserSchema.methods.nextLevel = (user, callback) => {\n  Level.find({position: user.level+1}, (error, nextLevel) => {\n    if(error){\n      callback(error);\n    }else{\n      callback(nextLevel[0]);\n    }\n  });\n}\n\nUserSchema.statics.authenticate = function(email, password, callback){\n  User.find({email: email}).exec((error, user) => {\n    if(error){\n      return callback(error);\n    }else if(!user[0]){\n      let err = new Error(\"No User Found\");\n      err.status = 401;\n      return callback(err);\n    }else{\n      bcrypt.compare(password, user[0].password, function(error, result){\n        if(error){\n          callback(error);\n        }else{\n          if(result == true){\n            return callback(null, user[0]);\n          }else{\n            return callback();\n          }\n        }\n      });\n    }\n  });\n};\n\nUserSchema.pre(\"save\", function(next){\n  let user = this;\n  bcrypt.hash(user.password, 10, function(error, hash){\n    if(error){\n      next(error);\n    }else{\n      user.password = hash;\n      next();\n    }\n  });\n});\n\nvar User = mongoose.model(\"User\", UserSchema);\nmodule.exports = User;\n"]}