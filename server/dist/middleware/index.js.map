{"version":3,"sources":["../../src/middleware/index.js"],"names":["MongoStore","require","connect","mongodb","db","connection","storeContainer","mongooseConnection","requiresLoggedIn","req","res","next","query","sessionId","err","Error","message","status","Promise","resolve","get","session","userId","error","sessionID","sessionStore"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,aAAaC,QAAQ,eAAR,2BAAjB;;AAEA,mBAASC,OAAT,CAAiB,mBAASC,OAA1B;AACA,IAAMC,KAAK,mBAASC,UAApB;AACA,IAAMC,iBAAiB,IAAIN,UAAJ,CAAe,EAACO,oBAAoBH,EAArB,EAAf,CAAvB;;kBAGe;AACbI,kBADa,4BACIC,GADJ,EACSC,GADT,EACcC,IADd,EACmB;AAC9B,QAAG,CAACF,IAAIG,KAAJ,CAAUC,SAAX,IAAwBJ,IAAIG,KAAJ,CAAUC,SAAV,KAAwB,EAAnD,EAAsD;AACpD,UAAIC,MAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAV;AACAD,UAAIE,OAAJ,GAAc,iBAAd;AACAF,UAAIG,MAAJ,GAAa,GAAb;AACA,aAAON,KAAKG,GAAL,CAAP;AACD,KALD,MAKK;AACH,aAAO,IAAII,OAAJ,CAAY,UAACC,OAAD,EAAW;AAC5Bb,uBAAec,GAAf,CAAmBX,IAAIG,KAAJ,CAAUC,SAA7B,EAAwC,UAACC,GAAD,EAAKO,OAAL,EAAe;AACrD,cAAGP,GAAH,EAAO;AACLA,gBAAIE,OAAJ,GAAc,yBAAd;AACD,WAFD,MAEK;AACH,gBAAG,CAACK,OAAD,IAAY,CAACA,QAAQC,MAAxB,EAA+B;AAC7B,kBAAIC,QAAQ,IAAIR,KAAJ,CAAU,iBAAV,CAAZ;AACAQ,oBAAMN,MAAN,GAAe,GAAf;AACAM,oBAAMP,OAAN,GAAgB,iBAAhB;AACAG,sBAASR,KAAKY,KAAL,CAAT;AACD,aALD,MAKK;AACHd,kBAAIe,SAAJ,GAAgBf,IAAIG,KAAJ,CAAUC,SAA1B;AACAJ,kBAAIgB,YAAJ,GAAmBJ,OAAnB;AACAF,sBAASR,MAAT;AACD;AACF;AACF,SAfD;AAgBD,OAjBM,CAAP;AAkBD;AACF;AA3BY,C","file":"index.js","sourcesContent":["import mongoose from \"mongoose\";\nimport session from \"express-session\";\nimport Settings from \"../settings\";\n\nvar MongoStore = require(\"connect-mongo\")(session);\n\nmongoose.connect(Settings.mongodb);\nconst db = mongoose.connection;\nconst storeContainer = new MongoStore({mongooseConnection: db});\n\n\nexport default {\n  requiresLoggedIn(req, res, next){\n    if(!req.query.sessionId || req.query.sessionId === \"\"){\n      let err = new Error(\"Invalid Session\");\n      err.message = \"Invalid Session\";\n      err.status = 401;\n      return next(err);\n    }else{\n      return new Promise((resolve)=>{\n        storeContainer.get(req.query.sessionId, (err,session)=>{\n          if(err){\n            err.message = \"Session retrieval error\";\n          }else{\n            if(!session || !session.userId){\n              let error = new Error(\"Invalid Session\");\n              error.status = 401;\n              error.message = \"Invalid Session\";\n              resolve (next(error));\n            }else{\n              req.sessionID = req.query.sessionId;\n              req.sessionStore = session;\n              resolve (next());\n            }\n          }\n        });\n      });\n    }\n  },\n};\n"]}